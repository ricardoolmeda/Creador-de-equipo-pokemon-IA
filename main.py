import openai
from config import *

def preguntas_pokemon():
    preguntas = [
        "¬øCu√°l es tu Pok√©mon favorito?",
        "Si pudieras vivir en una regi√≥n del mundo Pok√©mon, ¬øcu√°l elegir√≠as?",
        "¬øTipo favorito?",
        "¬øPrefieres entrenar Pok√©mon de un tipo espec√≠fico o te gusta tener un equipo variado?",
        "¬øCu√°l es tu juego de Pok√©mon favorito?",
        "¬øTe identificas con alg√∫n entrenador o personaje de la serie Pok√©mon?",
        "¬øTienes alg√∫n recuerdo especial relacionado con Pok√©mon? ¬øQu√© pas√≥?",
        "¬øPrefieres batallar en gimnasios o participar en concursos Pok√©mon?",
        "Si pudieras tener un Pok√©mon en la vida real, ¬øcu√°l escoger√≠as y por qu√©?"
    ]
    
    respuestas = []
    
    for pregunta in preguntas:
        respuesta = input(pregunta + " ")
        respuestas.append(respuesta)
    
    return respuestas

def menu_recomendaciones():
    print("1. Recomendar equipo")
    print("2. Volver al men√∫ principal")
    return input("Selecciona una opci√≥n: ")

def main():
    openai.api_key = MY_KEY # Cambiar la key por la propia
    print("üí¨ ChatGPT API en Python")

    # Contexto del asistente
    context = {"role": "system", "content": "Eres un asistente muy √∫til y amigable, siempre dispuesto a ayudar y a hacer la conversaci√≥n m√°s entretenida."}
    messages = [context]

    # Preguntas de Pokemon
    respuestas_usuario = preguntas_pokemon()
    print("\nTus respuestas:")
    for i, respuesta in enumerate(respuestas_usuario, 1):
        print(f"Pregunta {i}: {respuesta}")

    while True:
        option = menu_recomendaciones()

        if option == "1":
            # Recomendamos el equipo segun las preguntas
            content = "Basado en mis respuestas: " + str(respuestas_usuario) + ". ¬øCu√°l ser√≠a un buen equipo Pok√©mon?"
            messages.append({"role": "user", "content": content})
            response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=messages
            )
            response_content = response.choices[0].message.content
            messages.append({"role": "assistant", "content": response_content})
            print(f"> {response_content}")
        elif option == "2":
            # Volver al menu principal
            print("Volviendo al men√∫ principal.")
            break
        else:
            print("Opci√≥n no v√°lida, por favor selecciona una opci√≥n del men√∫.")

if __name__ == "__main__":
    main()
